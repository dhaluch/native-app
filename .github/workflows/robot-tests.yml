name: Run Robot Framework Tests

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    outputs:
      artifact_name: ${{ steps.set_meta.outputs.artifact_name }}
      date: ${{ steps.set_meta.outputs.date }}
      datetime: ${{ steps.set_meta.outputs.datetime }}
      branch: ${{ steps.set_meta.outputs.branch }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-appiumlibrary

      # Define meta (data/branch) e nome dinâmico do artifact
      - name: 🧭 Set meta (date, branch, artifact name)
        id: set_meta
        run: |
          DATE=$(date +'%Y-%m-%d')
          DATETIME=$(date +'%Y-%m-%d %H:%M:%S')
          BRANCH='${{ github.ref_name }}'
          ARTIFACT_NAME="robot-logs-${BRANCH}-${DATE}"
          echo "date=${DATE}" >> $GITHUB_OUTPUT
          echo "datetime=${DATETIME}" >> $GITHUB_OUTPUT
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          echo "artifact_name=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT
          echo "Artifact: ${ARTIFACT_NAME}"

      - name: 🧪 Run Robot Framework tests
        run: |
          mkdir -p logs
          robot --outputdir logs tests/

      # Garante que sempre exista conteúdo para publicar (mesmo em falha cedo)
      - name: 🧷 Ensure logs folder (even on failure)
        if: always()
        env:
          BRANCH: ${{ steps.set_meta.outputs.branch }}
          DATE: ${{ steps.set_meta.outputs.date }}
        run: |
          mkdir -p logs
          [ -f logs/report.html ] || cat > logs/report.html <<HTML
          <!doctype html><meta charset="utf-8"><title>Robot Report — ${BRANCH} — ${DATE}</title>
          <h1>Robot Report — ${BRANCH} — ${DATE}</h1>
          <p>Nenhum relatório foi gerado. Verifique os logs do job de testes.</p>
          HTML
          [ -f logs/log.html ] || cat > logs/log.html <<HTML
          <!doctype html><meta charset="utf-8"><title>Robot Log — ${BRANCH} — ${DATE}</title>
          <h1>Robot Log — ${BRANCH} — ${DATE}</h1>
          <p>Nenhum log disponível. Verifique a execução do job de testes.</p>
          HTML
          cat > logs/index.html <<HTML
          <!doctype html><meta charset="utf-8">
          <meta http-equiv="refresh" content="0; url=report.html">
          <title>Robot Logs — ${BRANCH} — ${DATE}</title>
          <h1>Robot Logs — ${BRANCH} — ${DATE}</h1>
          <p>Redirecionando para <a href="report.html">report.html</a>…</p>
          HTML

      - name: 📤 Upload Robot Framework logs (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set_meta.outputs.artifact_name }}
          path: logs/

  deploy-pages:
    if: always()
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: ⬇️ Download logs artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.test.outputs.artifact_name }}
          path: logs
        continue-on-error: true

      - name: 🧷 Ensure logs exist (fallback in deploy job)
        env:
          BRANCH: ${{ needs.test.outputs.branch }}
          DATE: ${{ needs.test.outputs.date }}
        run: |
          mkdir -p logs
          [ -f logs/index.html ] || cat > logs/index.html <<HTML
          <!doctype html><meta charset="utf-8">
          <title>Robot Logs — ${BRANCH} — ${DATE}</title>
          <h1>Robot Logs — ${BRANCH} — ${DATE}</h1>
          <p>Nenhum artifact foi baixado. Verifique a execução do job de testes.</p>
          HTML

      - name: ⬆️ Upload Pages artifact (logs/)
        uses: actions/upload-pages-artifact@v3
        with:
          path: logs

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 📢 Show logs URL (console + summary)
        env:
          LOGS_URL: ${{ steps.deployment.outputs.page_url }}
          DATE: ${{ needs.test.outputs.datetime }}
          BRANCH: ${{ needs.test.outputs.branch }}
        run: |
          echo "✅ Logs publicados com sucesso!"
          echo "📅 Data: ${DATE}"
          echo "🌿 Branch: ${BRANCH}"
          echo "🌐 URL: ${LOGS_URL}"

          {
            echo "## 📊 Robot Framework — Logs/Publicação"
            echo ""
            echo "**📅 Data:** ${DATE}  "
            echo "**🌿 Branch:** ${BRANCH}  "
            echo ""
            echo "[👉 Acessar Logs](${LOGS_URL})"
          } >> $GITHUB_STEP_SUMMARY
